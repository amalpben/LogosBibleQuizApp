// Generated by view binder compiler. Do not edit!
package in.ecsolution.logosquiz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import in.ecsolution.logosquiz.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomePageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton closeInfo;

  @NonNull
  public final ImageButton closeSettings;

  @NonNull
  public final TextView dailyStreak;

  @NonNull
  public final ImageButton exit;

  @NonNull
  public final ImageButton help;

  @NonNull
  public final ImageButton info;

  @NonNull
  public final ConstraintLayout infoLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final RelativeLayout loading;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView mothlyStreak;

  @NonNull
  public final TextView playGeneral;

  @NonNull
  public final TextView playLogos;

  @NonNull
  public final ImageButton settings;

  @NonNull
  public final RelativeLayout settingsLayout;

  @NonNull
  public final SwitchCompat switchMusic;

  @NonNull
  public final SwitchCompat switchSound;

  @NonNull
  public final TextView syllabusLogos;

  @NonNull
  public final TextView totalStars;

  @NonNull
  public final TextView tvMusic;

  @NonNull
  public final TextView tvSettings;

  @NonNull
  public final TextView tvSound;

  @NonNull
  public final TextView weeklyStreak;

  private ActivityHomePageBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton closeInfo, @NonNull ImageButton closeSettings,
      @NonNull TextView dailyStreak, @NonNull ImageButton exit, @NonNull ImageButton help,
      @NonNull ImageButton info, @NonNull ConstraintLayout infoLayout,
      @NonNull LinearLayout linearLayout2, @NonNull LinearLayout linearLayout3,
      @NonNull LinearLayout linearLayout4, @NonNull LinearLayout linearLayout5,
      @NonNull RelativeLayout loading, @NonNull ConstraintLayout main,
      @NonNull TextView mothlyStreak, @NonNull TextView playGeneral, @NonNull TextView playLogos,
      @NonNull ImageButton settings, @NonNull RelativeLayout settingsLayout,
      @NonNull SwitchCompat switchMusic, @NonNull SwitchCompat switchSound,
      @NonNull TextView syllabusLogos, @NonNull TextView totalStars, @NonNull TextView tvMusic,
      @NonNull TextView tvSettings, @NonNull TextView tvSound, @NonNull TextView weeklyStreak) {
    this.rootView = rootView;
    this.closeInfo = closeInfo;
    this.closeSettings = closeSettings;
    this.dailyStreak = dailyStreak;
    this.exit = exit;
    this.help = help;
    this.info = info;
    this.infoLayout = infoLayout;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.linearLayout4 = linearLayout4;
    this.linearLayout5 = linearLayout5;
    this.loading = loading;
    this.main = main;
    this.mothlyStreak = mothlyStreak;
    this.playGeneral = playGeneral;
    this.playLogos = playLogos;
    this.settings = settings;
    this.settingsLayout = settingsLayout;
    this.switchMusic = switchMusic;
    this.switchSound = switchSound;
    this.syllabusLogos = syllabusLogos;
    this.totalStars = totalStars;
    this.tvMusic = tvMusic;
    this.tvSettings = tvSettings;
    this.tvSound = tvSound;
    this.weeklyStreak = weeklyStreak;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomePageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomePageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.closeInfo;
      ImageButton closeInfo = ViewBindings.findChildViewById(rootView, id);
      if (closeInfo == null) {
        break missingId;
      }

      id = R.id.closeSettings;
      ImageButton closeSettings = ViewBindings.findChildViewById(rootView, id);
      if (closeSettings == null) {
        break missingId;
      }

      id = R.id.dailyStreak;
      TextView dailyStreak = ViewBindings.findChildViewById(rootView, id);
      if (dailyStreak == null) {
        break missingId;
      }

      id = R.id.exit;
      ImageButton exit = ViewBindings.findChildViewById(rootView, id);
      if (exit == null) {
        break missingId;
      }

      id = R.id.help;
      ImageButton help = ViewBindings.findChildViewById(rootView, id);
      if (help == null) {
        break missingId;
      }

      id = R.id.info;
      ImageButton info = ViewBindings.findChildViewById(rootView, id);
      if (info == null) {
        break missingId;
      }

      id = R.id.infoLayout;
      ConstraintLayout infoLayout = ViewBindings.findChildViewById(rootView, id);
      if (infoLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.loading;
      RelativeLayout loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.mothlyStreak;
      TextView mothlyStreak = ViewBindings.findChildViewById(rootView, id);
      if (mothlyStreak == null) {
        break missingId;
      }

      id = R.id.playGeneral;
      TextView playGeneral = ViewBindings.findChildViewById(rootView, id);
      if (playGeneral == null) {
        break missingId;
      }

      id = R.id.playLogos;
      TextView playLogos = ViewBindings.findChildViewById(rootView, id);
      if (playLogos == null) {
        break missingId;
      }

      id = R.id.settings;
      ImageButton settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      id = R.id.settingsLayout;
      RelativeLayout settingsLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsLayout == null) {
        break missingId;
      }

      id = R.id.switchMusic;
      SwitchCompat switchMusic = ViewBindings.findChildViewById(rootView, id);
      if (switchMusic == null) {
        break missingId;
      }

      id = R.id.switchSound;
      SwitchCompat switchSound = ViewBindings.findChildViewById(rootView, id);
      if (switchSound == null) {
        break missingId;
      }

      id = R.id.syllabusLogos;
      TextView syllabusLogos = ViewBindings.findChildViewById(rootView, id);
      if (syllabusLogos == null) {
        break missingId;
      }

      id = R.id.totalStars;
      TextView totalStars = ViewBindings.findChildViewById(rootView, id);
      if (totalStars == null) {
        break missingId;
      }

      id = R.id.tvMusic;
      TextView tvMusic = ViewBindings.findChildViewById(rootView, id);
      if (tvMusic == null) {
        break missingId;
      }

      id = R.id.tvSettings;
      TextView tvSettings = ViewBindings.findChildViewById(rootView, id);
      if (tvSettings == null) {
        break missingId;
      }

      id = R.id.tvSound;
      TextView tvSound = ViewBindings.findChildViewById(rootView, id);
      if (tvSound == null) {
        break missingId;
      }

      id = R.id.weeklyStreak;
      TextView weeklyStreak = ViewBindings.findChildViewById(rootView, id);
      if (weeklyStreak == null) {
        break missingId;
      }

      return new ActivityHomePageBinding((ConstraintLayout) rootView, closeInfo, closeSettings,
          dailyStreak, exit, help, info, infoLayout, linearLayout2, linearLayout3, linearLayout4,
          linearLayout5, loading, main, mothlyStreak, playGeneral, playLogos, settings,
          settingsLayout, switchMusic, switchSound, syllabusLogos, totalStars, tvMusic, tvSettings,
          tvSound, weeklyStreak);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
