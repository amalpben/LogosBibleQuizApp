// Generated by view binder compiler. Do not edit!
package in.ecsolution.logosquiz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import in.ecsolution.logosquiz.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGeneralQuizBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout cardLayout;

  @NonNull
  public final LinearLayout dailyQuizBtn;

  @NonNull
  public final TextView dailyQuizDate;

  @NonNull
  public final TextView dailyQuizScore;

  @NonNull
  public final TextView dailyQuizStreak;

  @NonNull
  public final TextView dailyQuizSyl;

  @NonNull
  public final ImageButton homeButton;

  @NonNull
  public final RelativeLayout loading;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final LinearLayout monthlyQuizBtn;

  @NonNull
  public final TextView monthlyQuizDate;

  @NonNull
  public final TextView monthlyQuizScore;

  @NonNull
  public final TextView monthlyQuizStreak;

  @NonNull
  public final TextView monthlyQuizSyl;

  @NonNull
  public final RelativeLayout relativeLayout2;

  @NonNull
  public final TextView timerTextDaily;

  @NonNull
  public final TextView timerTextMonthly;

  @NonNull
  public final TextView timerTextWeekly;

  @NonNull
  public final LinearLayout weeklyQuizBtn;

  @NonNull
  public final TextView weeklyQuizDate;

  @NonNull
  public final TextView weeklyQuizScore;

  @NonNull
  public final TextView weeklyQuizStreak;

  @NonNull
  public final TextView weeklyQuizSyl;

  private ActivityGeneralQuizBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout cardLayout, @NonNull LinearLayout dailyQuizBtn,
      @NonNull TextView dailyQuizDate, @NonNull TextView dailyQuizScore,
      @NonNull TextView dailyQuizStreak, @NonNull TextView dailyQuizSyl,
      @NonNull ImageButton homeButton, @NonNull RelativeLayout loading,
      @NonNull ConstraintLayout main, @NonNull LinearLayout monthlyQuizBtn,
      @NonNull TextView monthlyQuizDate, @NonNull TextView monthlyQuizScore,
      @NonNull TextView monthlyQuizStreak, @NonNull TextView monthlyQuizSyl,
      @NonNull RelativeLayout relativeLayout2, @NonNull TextView timerTextDaily,
      @NonNull TextView timerTextMonthly, @NonNull TextView timerTextWeekly,
      @NonNull LinearLayout weeklyQuizBtn, @NonNull TextView weeklyQuizDate,
      @NonNull TextView weeklyQuizScore, @NonNull TextView weeklyQuizStreak,
      @NonNull TextView weeklyQuizSyl) {
    this.rootView = rootView;
    this.cardLayout = cardLayout;
    this.dailyQuizBtn = dailyQuizBtn;
    this.dailyQuizDate = dailyQuizDate;
    this.dailyQuizScore = dailyQuizScore;
    this.dailyQuizStreak = dailyQuizStreak;
    this.dailyQuizSyl = dailyQuizSyl;
    this.homeButton = homeButton;
    this.loading = loading;
    this.main = main;
    this.monthlyQuizBtn = monthlyQuizBtn;
    this.monthlyQuizDate = monthlyQuizDate;
    this.monthlyQuizScore = monthlyQuizScore;
    this.monthlyQuizStreak = monthlyQuizStreak;
    this.monthlyQuizSyl = monthlyQuizSyl;
    this.relativeLayout2 = relativeLayout2;
    this.timerTextDaily = timerTextDaily;
    this.timerTextMonthly = timerTextMonthly;
    this.timerTextWeekly = timerTextWeekly;
    this.weeklyQuizBtn = weeklyQuizBtn;
    this.weeklyQuizDate = weeklyQuizDate;
    this.weeklyQuizScore = weeklyQuizScore;
    this.weeklyQuizStreak = weeklyQuizStreak;
    this.weeklyQuizSyl = weeklyQuizSyl;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGeneralQuizBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGeneralQuizBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_general_quiz, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGeneralQuizBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardLayout;
      LinearLayout cardLayout = ViewBindings.findChildViewById(rootView, id);
      if (cardLayout == null) {
        break missingId;
      }

      id = R.id.dailyQuizBtn;
      LinearLayout dailyQuizBtn = ViewBindings.findChildViewById(rootView, id);
      if (dailyQuizBtn == null) {
        break missingId;
      }

      id = R.id.dailyQuizDate;
      TextView dailyQuizDate = ViewBindings.findChildViewById(rootView, id);
      if (dailyQuizDate == null) {
        break missingId;
      }

      id = R.id.dailyQuizScore;
      TextView dailyQuizScore = ViewBindings.findChildViewById(rootView, id);
      if (dailyQuizScore == null) {
        break missingId;
      }

      id = R.id.dailyQuizStreak;
      TextView dailyQuizStreak = ViewBindings.findChildViewById(rootView, id);
      if (dailyQuizStreak == null) {
        break missingId;
      }

      id = R.id.dailyQuizSyl;
      TextView dailyQuizSyl = ViewBindings.findChildViewById(rootView, id);
      if (dailyQuizSyl == null) {
        break missingId;
      }

      id = R.id.homeButton;
      ImageButton homeButton = ViewBindings.findChildViewById(rootView, id);
      if (homeButton == null) {
        break missingId;
      }

      id = R.id.loading;
      RelativeLayout loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.monthlyQuizBtn;
      LinearLayout monthlyQuizBtn = ViewBindings.findChildViewById(rootView, id);
      if (monthlyQuizBtn == null) {
        break missingId;
      }

      id = R.id.monthlyQuizDate;
      TextView monthlyQuizDate = ViewBindings.findChildViewById(rootView, id);
      if (monthlyQuizDate == null) {
        break missingId;
      }

      id = R.id.monthlyQuizScore;
      TextView monthlyQuizScore = ViewBindings.findChildViewById(rootView, id);
      if (monthlyQuizScore == null) {
        break missingId;
      }

      id = R.id.monthlyQuizStreak;
      TextView monthlyQuizStreak = ViewBindings.findChildViewById(rootView, id);
      if (monthlyQuizStreak == null) {
        break missingId;
      }

      id = R.id.monthlyQuizSyl;
      TextView monthlyQuizSyl = ViewBindings.findChildViewById(rootView, id);
      if (monthlyQuizSyl == null) {
        break missingId;
      }

      id = R.id.relativeLayout2;
      RelativeLayout relativeLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout2 == null) {
        break missingId;
      }

      id = R.id.timerTextDaily;
      TextView timerTextDaily = ViewBindings.findChildViewById(rootView, id);
      if (timerTextDaily == null) {
        break missingId;
      }

      id = R.id.timerTextMonthly;
      TextView timerTextMonthly = ViewBindings.findChildViewById(rootView, id);
      if (timerTextMonthly == null) {
        break missingId;
      }

      id = R.id.timerTextWeekly;
      TextView timerTextWeekly = ViewBindings.findChildViewById(rootView, id);
      if (timerTextWeekly == null) {
        break missingId;
      }

      id = R.id.weeklyQuizBtn;
      LinearLayout weeklyQuizBtn = ViewBindings.findChildViewById(rootView, id);
      if (weeklyQuizBtn == null) {
        break missingId;
      }

      id = R.id.weeklyQuizDate;
      TextView weeklyQuizDate = ViewBindings.findChildViewById(rootView, id);
      if (weeklyQuizDate == null) {
        break missingId;
      }

      id = R.id.weeklyQuizScore;
      TextView weeklyQuizScore = ViewBindings.findChildViewById(rootView, id);
      if (weeklyQuizScore == null) {
        break missingId;
      }

      id = R.id.weeklyQuizStreak;
      TextView weeklyQuizStreak = ViewBindings.findChildViewById(rootView, id);
      if (weeklyQuizStreak == null) {
        break missingId;
      }

      id = R.id.weeklyQuizSyl;
      TextView weeklyQuizSyl = ViewBindings.findChildViewById(rootView, id);
      if (weeklyQuizSyl == null) {
        break missingId;
      }

      return new ActivityGeneralQuizBinding((ConstraintLayout) rootView, cardLayout, dailyQuizBtn,
          dailyQuizDate, dailyQuizScore, dailyQuizStreak, dailyQuizSyl, homeButton, loading, main,
          monthlyQuizBtn, monthlyQuizDate, monthlyQuizScore, monthlyQuizStreak, monthlyQuizSyl,
          relativeLayout2, timerTextDaily, timerTextMonthly, timerTextWeekly, weeklyQuizBtn,
          weeklyQuizDate, weeklyQuizScore, weeklyQuizStreak, weeklyQuizSyl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
